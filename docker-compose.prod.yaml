services:
  timelines-backend:
    image: ghcr.io/mloitzl/timelines-backend:latest
    ports:
      - "4000:4000"
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/timelines?authSource=admin&replicaSet=rs0
      - MONGODB_USER=${MONGODB_USER}
      - MONGODB_PASS=${MONGODB_PASS}
    depends_on:
      - mongodb-init
    restart: unless-stopped
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  timelines-frontend:
    image: ghcr.io/mloitzl/timelines-frontend:latest
    ports:
      - "3000:80"
    depends_on:
      - timelines-backend
    restart: unless-stopped
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  mongodb:
    image: mongo:latest
    command:
      [
        "--replSet",
        "rs0",
        "--bind_ip_all",
        "--keyFile",
        "/data/keyfile/mongo-keyfile",
      ]
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PASS}
    volumes:
      - mongodb_data:/data/db
      - mongodb_keyfile:/data/keyfile
    user: "999:999"
    restart: unless-stopped
    healthcheck:
      test: mongosh --username ${MONGODB_USER} --password ${MONGODB_PASS} --authenticationDatabase admin --eval "db.adminCommand('ping')" --quiet
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 40s

  mongodb-init:
    image: ghcr.io/mloitzl/timelines-mongodb-init:latest
    depends_on:
      - mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PASS}
    volumes:
      - mongodb_keyfile:/data/keyfile
    restart: on-failure
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  event-processor:
    image: ghcr.io/mloitzl/timelines-event-processor:latest
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/timelines?authSource=admin&replicaSet=rs0
      - MONGODB_USER=${MONGODB_USER}
      - MONGODB_PASS=${MONGODB_PASS}
    depends_on:
      - mongodb-init
      - timelines-backend
    restart: unless-stopped
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_DEBUG=true
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=300
      - WATCHTOWER_REGISTRY_AUTH=true
      - WATCHTOWER_NOTIFICATION_REPORT=true
      - WATCHTOWER_MONITOR_ONLY=true
      - REPO_USER=${GITHUB_USER}
      - REPO_PASS=${GHCR_GITHUB_PAT}
    restart: unless-stopped
volumes:
  mongodb_data:
  mongodb_keyfile:
